{"ast":null,"code":"var _jsxFileName = \"/home/said/Projects/eth-fundraiser/client/src/components/Demo/ContractBtns.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContractBtns(_ref) {\n  _s();\n  let {\n    setValue\n  } = _ref;\n  const {\n    state: {\n      contract,\n      accounts\n    }\n  } = useEth();\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = e => {\n    if (/^\\d+$|^$/.test(e.target.value)) {\n      setInputValue(e.target.value);\n    }\n  };\n  const read = async () => {\n    const value = await contract.methods.read().call({\n      from: accounts[0]\n    });\n    setValue(value);\n  };\n  const write = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    const newValue = parseInt(inputValue);\n    await contract.methods.write(newValue).send({\n      from: accounts[0]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btns\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: read,\n      children: \"read()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: write,\n      className: \"input-btn\",\n      children: [\"write(\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"uint\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ContractBtns, \"E31RvTzadT/2nT0l3NsgowYm0ek=\", false, function () {\n  return [useEth];\n});\n_c = ContractBtns;\nexport default ContractBtns;\nvar _c;\n$RefreshReg$(_c, \"ContractBtns\");","map":{"version":3,"names":["useState","useEth","ContractBtns","setValue","state","contract","accounts","inputValue","setInputValue","handleInputChange","e","test","target","value","read","methods","call","from","write","tagName","alert","newValue","parseInt","send"],"sources":["/home/said/Projects/eth-fundraiser/client/src/components/Demo/ContractBtns.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction ContractBtns({ setValue }) {\n  const { state: { contract, accounts } } = useEth();\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = e => {\n    if (/^\\d+$|^$/.test(e.target.value)) {\n      setInputValue(e.target.value);\n    }\n  };\n\n  const read = async () => {\n    const value = await contract.methods.read().call({ from: accounts[0] });\n    setValue(value);\n  };\n\n  const write = async e => {\n    if (e.target.tagName === \"INPUT\") {\n      return;\n    }\n    if (inputValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    const newValue = parseInt(inputValue);\n    await contract.methods.write(newValue).send({ from: accounts[0] });\n  };\n\n  return (\n    <div className=\"btns\">\n\n      <button onClick={read}>\n        read()\n      </button>\n\n      <div onClick={write} className=\"input-btn\">\n        write(<input\n          type=\"text\"\n          placeholder=\"uint\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />)\n      </div>\n\n    </div>\n  );\n}\n\nexport default ContractBtns;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,kCAAkC;AAAC;AAEtD,SAASC,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAChC,MAAM;IAAEC,KAAK,EAAE;MAAEC,QAAQ;MAAEC;IAAS;EAAE,CAAC,GAAGL,MAAM,EAAE;EAClD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,iBAAiB,GAAGC,CAAC,IAAI;IAC7B,IAAI,UAAU,CAACC,IAAI,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAE;MACnCL,aAAa,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,IAAI,GAAG,YAAY;IACvB,MAAMD,KAAK,GAAG,MAAMR,QAAQ,CAACU,OAAO,CAACD,IAAI,EAAE,CAACE,IAAI,CAAC;MAAEC,IAAI,EAAEX,QAAQ,CAAC,CAAC;IAAE,CAAC,CAAC;IACvEH,QAAQ,CAACU,KAAK,CAAC;EACjB,CAAC;EAED,MAAMK,KAAK,GAAG,MAAMR,CAAC,IAAI;IACvB,IAAIA,CAAC,CAACE,MAAM,CAACO,OAAO,KAAK,OAAO,EAAE;MAChC;IACF;IACA,IAAIZ,UAAU,KAAK,EAAE,EAAE;MACrBa,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACf,UAAU,CAAC;IACrC,MAAMF,QAAQ,CAACU,OAAO,CAACG,KAAK,CAACG,QAAQ,CAAC,CAACE,IAAI,CAAC;MAAEN,IAAI,EAAEX,QAAQ,CAAC,CAAC;IAAE,CAAC,CAAC;EACpE,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBAEnB;MAAQ,OAAO,EAAEQ,IAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEb,eAET;MAAK,OAAO,EAAEI,KAAM;MAAC,SAAS,EAAC,WAAW;MAAA,kCAClC;QACJ,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,MAAM;QAClB,KAAK,EAAEX,UAAW;QAClB,QAAQ,EAAEE;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV;AAAC,GA7CQP,YAAY;EAAA,QACuBD,MAAM;AAAA;AAAA,KADzCC,YAAY;AA+CrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}